Multi-dimension Array Initialization

다차원 array 생성법 
dp = [[[0 for k in range(bn+1)] for j in range(gn+1)] for i in range(rn+1)]

2-d array를 받는 방법 주변에 -1까지 생성 
n,m = map(int,input().split())
    ar = [[-1]*(m+2) for _ in range(n+2)]

    for i in range(1,n+1):
        temp = list(map(int,input().split()))
        for j in range(1,m+1):
            ar[i][j] = temp[j-1]



dp approach
1. 뒤에 값들을 기준으로 현재값들을 만들것이냐


2. 현재값을 기준으로 미래값들을 만들것이냐 


3. Dp transition은 어떤것인가? 
 
4. dp transition에 필요한 variables들이 있는가? 

#667 f문제는 얻어갈께 많은 문제 다시 풀어보자 


DP question types:
1) Combinatorics: count the number of possible~~
2) Optimiazation: maximal, minimal~~. Think of greedy approach first. 
3) Yes or no 





    
    Atcoder DP contest 
    frog2, vacation 
    D. Colored Rectangles
    이런 문제들이 모든 제한 값이 작을 경우 모든 경우의수를 compute해서 값을 찾는것. 
    
        






2d array dp문제
#방향성 따질때 쓰는 2d grid에 유용한 식 
dx = [0,0,-1,1]
dy = [1,-1,0,0]



